
ContextAPI
- 전역 상태 관리를 위한 도구라는 점은 Redux와 같다
(Redux가 ContextAPI 기반으로 만들었기 때문이다)
(하지만, Redux가 더 다양하고 편리한 기능을 제공)

----------------------------------------------------

Redux?
- 전역 상태 관리 툴
- 리액트는 단방향 데이터 흐름이 특징
- 개발 하다보면 다양한 컴포넌트에서 공통적으로 쓰이는 데이터 (로그인 했을 때 회원정보)
- 컴포넌트가 분리되어있기 때문에 데이터들도 분리되어있다 이런 데이터를 사용하기 위해서는
   props->props->porps-> ... 복잡하게 데이터를 전달해야했는데

- 리덕스는 중앙(폴더,라이브러리)에서 데이터를 관리하고 컴포넌들은 필요할 때마다 데이터를 가져다 쓸 수
있도록 제공

단점: store(저장소)에 있는 각 다른 데이터들을 변경하고자 할 때 매번 action과 reducer도 만들어줘야하기
때문에 코드량이 많아진다


===> Reducer+ContextAPI ==> 미들웨어를 통해 더 편린한 기능

ex) 백데이터와 데이터 통신할 때 동기적흐름을 위한 미들웨어
    개발툴을 이용하여 에러를 잡기 편하게 히스토리를 제공
    로거를 통해 해당 요청이 실패했는지 성공했는지 결과를 알려줌

----------------------------------------------------

Redux를 이용한간 간단한 todoslist 구현하기

----------------------------------------------------

Redux 설치하기
npm i react-redux redux redux-devtools-extension

----------------------------------------------------

rootReducer및 리덕스 설정

import { createStore } from "redux";
import { Provider } from "react-redux";
import rootReducer from "./reducer";

const store = createStore(rootReducer);

ReactDOM.render(
  <Provider store={store}>
    <React.StrictMode>
      <App />
    </React.StrictMode>
  </Provider>,
  document.getElementById('root')
);

----------------------------------------------------

redux-devtools-extension < --크롬 확장프로그램 개발자도구의
redux 탭을 통해 히스토리 및, state 값을 확인이 가능하다

----------------------------------------------------